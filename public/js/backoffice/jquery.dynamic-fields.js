function sortSelect(e,t){for(var n=t.length;n>=0;n--){var i=e.find('option[value="'+t[n]+'"');i.length&&i.parent().prepend(i)}e.selectpicker("refresh");e.find("option:selected").map(function(){return $(this).text()}).get()}!function(e){e.fn.dynamicFields=function(t){var n="jquery-dynamic-field | ",i=e.extend({template:".dynamic-fields-template",buttonAdd:".dynamic-fields-button-add",maxFields:Number.MAX_VALUE,startFields:0},t),a=this.data("template")?this.data("template"):i.template;if(a.startsWith(".")){if(!(this.find(a).length>0))return console.log(n+"Cannot find template element for class='"+a+"'. Make sure the element is within the dynamic fields."),this;this.find(a).addClass("dynamic-fields-row"),this.template=this.find(a).clone(),this.find(a).remove()}else if(a.startsWith("#")){if(!(e(a).length>0))return console.log(n+"Cannot find template element for id='"+a+"'."),this;e(a).addClass("dynamic-fields-row"),this.template=e(a).clone()}else console.log(n+"Currently, template can only use class (use '.class-name') and id (use '#id-name')");var l=this.data("button-add")?this.data("button-add"):i.buttonAdd;if(l.startsWith(".")){if(!(this.find(l).length>0))return console.log(n+"Cannot find add button element for class='"+l+"'. Make sure the element is within the dynamic fields."),this;this.buttonAdd=this.find(l)}else if(l.startsWith("#")){if(!(e(l).length>0))return console.log(n+"Cannot find add button element for id='"+l+"'"),this;this.buttonAdd=e(l)}else console.log(n+"Currently, buttonAdd can only use class (use '.class-name') and id (use '#id-name')");var s=this,d=this,r=i.startFields,o=e("[data-index]");o.length&&(r=parseInt(o.last().attr("data-index"))+1),this.buttonAdd.on("click",function(t){if(t.preventDefault(),r<i.maxFields){var n=s.template.clone(!1);d.append(n);var a=n.find("input, select, textarea");a.val(""),setTimeout(function(){a[0].focus(),a[0].scrollIntoView()},100),n.find("input, select, textarea, .nav-link, .tab-pane, label").each(function(){var t=e(this),n=["id","name","href","for"],i=["[0]","_0"],a=["["+r+"]","_"+r];if(i.length===a.length)for(var l=0;l<n.length;l++){var s=n[l],d=t.attr(s);if(d)for(var o=0;o<i.length;o++)d.includes(i[o])&&t.attr(s,d.replace(i[o],a[o]))}}),n.find('[data-role="remove-field"]').on("click",function(t){t.preventDefault(),e(this).parents(".dynamic-fields-row").remove(),r--});var l=n.find(".order"),o=new Sortable(l[0],{ghostClass:"bg-warning",onUpdate:function(){sortSelect(c,this.toArray())}}),c=n.find(".selectpicker");c.selectpicker("refresh"),c.on("changed.bs.select",function(e,t,n,i){var a=e.currentTarget.options[t],s=a.value;if(n){var d="";d+='<li class="list-group-item" data-id="'+s+'">',d+=a.innerHTML,d+="</li>",l.append(d)}else l.find('li[data-id="'+s+'"]').remove();sortSelect(c,o.toArray())}),r++}else alert("lebih"+r+" | "+i.maxFields)}),d.find('[data-role="remove-field"]').on("click",function(t){t.preventDefault(),e(this).parents("[data-index]").remove(),r--})}}(jQuery),$(function(){var e=$('*[data-role="dynamic-fields"]');e.length>0&&e.dynamicFields();var t=$('select[class^="selectpicker"][name^=options]');t.length>0&&t.each(function(e,t){var n=$(t),i=n.parents(".form-group").find(".order");n.find("option:selected").each(function(e,t){var n=$(t),a="";a+='<li class="list-group-item" data-id="'+n.attr("value")+'">',a+=n.text(),a+="</li>",i.append(a)}),new Sortable(i[0],{ghostClass:"bg-warning",onUpdate:function(){sortSelect(n,this.toArray())}})})});
;